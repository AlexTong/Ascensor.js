/*
Ascensor.js 
version: 1.6.2 (2013-10-12)
description: Ascensor is a jquery plugin which aims to train and adapt content according to an elevator system
repository: https://github.com/kirkas/Ascensor.js
license: BSD
author: LÃ©o Galley <contact@kirkas.ch>
*/
(function(o,n){function i(n,i){this.element=n,this.options=o.extend({},s,i),this._defaults=s,this._name=t,this.init()}var t="ascensor",s={ascensorName:"ascensor",ascensorFloorName:null,childType:"div",windowsOn:0,direction:"y",loop:!0,ascensorMap:"",time:"1000",easing:"linear",keyNavigation:!0,queued:!1,queuedDirection:"x",overflow:"scroll"};i.prototype.init=function(){function i(i){n.location.hash&&(k=n.location.hash.split("/").pop(),o(v.options.ascensorFloorName).each(function(n){k===v.options.ascensorFloorName[n]&&(N=n,o("."+v.options.ascensorName+"Link").removeClass(v.options.ascensorName+"LinkActive").eq(N).addClass(v.options.ascensorName+"LinkActive"),i||s(N,v.options.time,!0))}))}function t(){g=o(document).width(),m=o(document).height(),o(y).width(g).height(m),o(L).width(g).height(m),"y"===v.options.direction&&o(L).stop().scrollTop(N*m),"x"===v.options.direction&&(o(L).stop().scrollLeft(N*g),o(y).each(function(n){o(this).css("left",n*g)})),"chocolate"===v.options.direction&&(o(y).each(function(n){o(this).css({left:v.options.ascensorMap[n][1]*g,top:v.options.ascensorMap[n][0]*m})}),o(L).stop().scrollLeft(v.options.ascensorMap[N][1]*g).scrollTop(v.options.ascensorMap[N][0]*m))}function s(i,t,s){s&&c(),"y"===v.options.direction&&o(L).stop().animate({scrollTop:i*m},t,v.options.easing,function(){a()}),"x"===v.options.direction&&o(L).stop().animate({scrollLeft:i*g},t,v.options.easing,function(){a()}),"chocolate"===v.options.direction&&(v.options.queued?"x"===v.options.queuedDirection?o(L).scrollLeft()===v.options.ascensorMap[i][1]*g?o(L).stop().animate({scrollTop:v.options.ascensorMap[i][0]*m},t,v.options.easing,function(){a()}):o(L).stop().animate({scrollLeft:v.options.ascensorMap[i][1]*g},t,v.options.easing,function(){o(L).stop().animate({scrollTop:v.options.ascensorMap[i][0]*m},t,v.options.easing,function(){a()})}):"y"===v.options.queuedDirection&&(o(L).scrollTop()===v.options.ascensorMap[i][0]*m?o(L).stop().animate({scrollLeft:v.options.ascensorMap[i][1]*g},t,v.options.easing,function(){a()}):o(L).stop().animate({scrollTop:v.options.ascensorMap[i][0]*m},t,v.options.easing,function(){o(L).stop().animate({scrollLeft:v.options.ascensorMap[i][1]*g},t,v.options.easing,function(){a()})})):o(L).stop().animate({scrollLeft:v.options.ascensorMap[i][1]*g,scrollTop:v.options.ascensorMap[i][0]*m},t,v.options.easing,function(){a()})),s||null!==v.options.ascensorFloorName&&(n.location.hash="/"+v.options.ascensorFloorName[i]),o("."+v.options.ascensorName+"Link").removeClass(v.options.ascensorName+"LinkActive"),o("."+v.options.ascensorName+"Link"+i).addClass(v.options.ascensorName+"LinkActive"),N=i}function e(n){if(o("input, textarea, button").is(":focus"))return!1;switch(n.keyCode){case 40:case 83:o(L).trigger({type:"ascensorDown",floor:N});break;case 38:case 87:o(L).trigger({type:"ascensorUp",floor:N});break;case 37:case 65:o(L).trigger({type:"ascensorLeft",floor:N});break;case 39:case 68:o(L).trigger({type:"ascensorRight",floor:N})}}function c(){o(L).trigger({type:"ascensorStart",floor:N})}function a(){o(L).trigger({type:"ascensorEnd",floor:N})}function r(){"y"==v.options.direction?o(L).trigger({type:"ascensorNext",floor:N}):"chocolate"==v.options.direction&&d(1,0)}function p(){"y"==v.options.direction?o(L).trigger({type:"ascensorPrev",floor:N}):"chocolate"==v.options.direction&&d(-1,0)}function l(){"x"==v.options.direction?o(L).trigger({type:"ascensorPrev",floor:N}):"chocolate"==v.options.direction&&d(0,-1)}function f(){"x"==v.options.direction?o(L).trigger({type:"ascensorNext",floor:N}):"chocolate"==v.options.direction&&d(0,1)}function u(){var o=N-1;0>o&&(o=v.options.loop?w:0),s(o,v.options.time)}function h(){var o=N+1;o>w&&(o=v.options.loop?0:w),s(o,v.options.time)}function d(n,i){var t=[v.options.ascensorMap[N][0]+n,v.options.ascensorMap[N][1]+i];o.each(v.options.ascensorMap,function(o){""+t==""+v.options.ascensorMap[o]&&s(o,v.options.time)})}var g,m,k,v=this,L=this.element,y=o(L).children(v.options.childType),N=v.options.windowsOn,w=-1;if(v.options.direction,o(L).css("position","absolute").width(g).height(m),o(L).css("overflow",v.options.overflow),o(y).width(g).height(m).each(function(){w+=1,o(this).attr("id",v.options.ascensorName+"Floor"+w).addClass(v.options.ascensorName+"Floor")}),("x"===v.options.direction||"chocolate"===v.options.direction)&&o(y).css({position:"absolute",overflow:"auto"}),o(n).resize(function(){t()}).load(function(){t()}).resize(),n.DeviceOrientationEvent&&o(n).bind("orientationchange",function(){t()}),v.options.keyNavigation){var M=/Firefox/i.test(navigator.userAgent);M?o(document).keypress(e):o(document).keydown(e)}o(L).on("ascensorLeft",function(){l()}),o(L).on("ascensorRight",function(){f()}),o(L).on("ascensorUp",function(){p()}),o(L).on("ascensorDown",function(){r()}),o(L).on("ascensorNext",function(){h()}),o(L).on("ascensorPrev",function(){u()});var x=v.options.ascensorName;o("."+x+"LinkPrev").on("click",function(){u()}),o("."+x+"LinkNext").on("click",function(){h()}),o("."+x+"LinkLeft").on("click",function(){l()}),o("."+x+"LinkRight").on("click",function(){f()}),o("."+x+"LinkUp").on("click",function(){r()}),o("."+x+"LinkDown").on("click",function(){p()}),o("."+x+"Link").on("click",function(){var n=parseInt(o(this).attr("class").split(" ")[1].split(v.options.ascensorName+"Link")[1],10);s(n,v.options.time)}),s(N,1,!0),o(n).on("hashchange",function(){i()}),i(!0)},o.fn[t]=function(n){return this.each(function(){o.data(this,"plugin_"+t)||o.data(this,"plugin_"+t,new i(this,n))})}})(jQuery,window);