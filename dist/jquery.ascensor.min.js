/*
Ascensor.js 
version: 1.5.6 (2013-04-21)
description: Ascensor is a jquery plugin which aims to train and adapt content according to an elevator system
repository: https://github.com/kirkas/Ascensor.js
license: BSD
author: LÃ©o Galley <contact@kirkas.ch>
*/
(function(o,n){function i(n,i){this.element=n,this.options=o.extend({},s,i),this._defaults=s,this._name=t,this.init()}var t="ascensor",s={AscensorName:"ascensor",AscensorFloorName:null,ChildType:"div",WindowsOn:1,Direction:"y",Loop:!0,AscensorMap:"",Time:"1000",Easing:"linear",KeyNavigation:!0,Queued:!1,QueuedDirection:"x"};i.prototype.init=function(){function i(i){n.location.hash&&(A=n.location.hash.split("/").pop(),o(T).each(function(n){A===T[n]&&(v=n+1,o("."+L.options.AscensorName+"Link").removeClass(L.options.AscensorName+"LinkActive").eq(v-1).addClass(L.options.AscensorName+"LinkActive"),i||s(v,L.options.Time,!0))}))}function t(){if(m=o(n).width(),d=o(n).height(),o(N).width(m).height(d),o(k).width(m).height(d),"y"===L.options.Direction&&o(k).stop().scrollTop((v-1)*d),"x"===L.options.Direction&&(o(k).stop().scrollLeft((v-1)*m),o(N).each(function(n){o(this).css("left",n*m)})),"chocolate"===L.options.Direction){var i=D[v-1].split("|");o(N).each(function(n){var i=D[n].split("|");o(this).css({left:(i[1]-1)*m,top:(i[0]-1)*d})}),o(k).stop().scrollLeft((i[1]-1)*m).scrollTop((i[0]-1)*d)}}function s(i,t,s){if(s&&c(),"y"===L.options.Direction&&o(k).stop().animate({scrollTop:(i-1)*d},t,L.options.Easing,function(){r()}),"x"===L.options.Direction&&o(k).stop().animate({scrollLeft:(i-1)*m},t,L.options.Easing,function(){r()}),"chocolate"===L.options.Direction){var e=D[i-1].split("|");L.options.Queued?"x"===L.options.QueuedDirection?o(k).scrollLeft()===(e[1]-1)*m?o(k).stop().animate({scrollTop:(e[0]-1)*d},t,L.options.Easing,function(){r()}):o(k).stop().animate({scrollLeft:(e[1]-1)*m},t,L.options.Easing,function(){o(k).stop().animate({scrollTop:(e[0]-1)*d},t,L.options.Easing,function(){r()})}):"y"===L.options.QueuedDirection&&(o(k).scrollTop()===(e[0]-1)*d?o(k).stop().animate({scrollLeft:(e[1]-1)*m},t,L.options.Easing,function(){r()}):o(k).stop().animate({scrollTop:(e[0]-1)*d},t,L.options.Easing,function(){o(k).stop().animate({scrollLeft:(e[1]-1)*m},t,L.options.Easing,function(){r()})})):o(k).stop().animate({scrollLeft:(e[1]-1)*m,scrollTop:(e[0]-1)*d},t,L.options.Easing,function(){r()})}s||null!==L.options.AscensorFloorName&&(n.location.hash="/"+T[i-1]),o("."+L.options.AscensorName+"Link").removeClass(L.options.AscensorName+"LinkActive"),o("."+L.options.AscensorName+"Link"+i).addClass(L.options.AscensorName+"LinkActive"),v=i}function e(n){switch(n.keyCode){case 40:case 83:o(k).trigger({type:"ascensorDown",floor:v});break;case 38:case 87:o(k).trigger({type:"ascensorUp",floor:v});break;case 37:case 65:o(k).trigger({type:"ascensorLeft",floor:v});break;case 39:case 68:o(k).trigger({type:"ascensorRight",floor:v})}}function c(){o(k).trigger({type:"ascensorStart",floor:v})}function r(){o(k).trigger({type:"ascensorEnd",floor:v})}function a(){"y"==L.options.Direction?o(k).trigger({type:"ascensorNext",floor:v}):"chocolate"==L.options.Direction&&g(1,0)}function p(){"y"==L.options.Direction?o(k).trigger({type:"ascensorPrev",floor:v}):"chocolate"==L.options.Direction&&g(-1,0)}function l(){"x"==L.options.Direction?o(k).trigger({type:"ascensorPrev",floor:v}):"chocolate"==L.options.Direction&&g(0,1)}function f(){"x"==L.options.Direction?o(k).trigger({type:"ascensorNext",floor:v}):"chocolate"==L.options.Direction&&g(0,-1)}function u(){v-=1,1>v&&(v=L.options.Loop?y:1),s(v,L.options.Time)}function h(){v+=1,v>y&&(v=L.options.Loop?1:y),s(v,L.options.Time)}function g(n,i){var t=D[v-1].split("|");o.each(D,function(o){D[o]===parseInt(t[0],10)+n+"|"+(parseInt(t[1],10)+i)&&s(o+1,L.options.Time)})}var m,d,A,L=this,k=this.element,N=o(k).children(L.options.ChildType),v=L.options.WindowsOn,y=0,D=L.options.AscensorMap.split(" & ");if(L.options.Direction,null!==L.options.AscensorFloorName)var T=L.options.AscensorFloorName.split(" | ");if(o(k).css("position","absolute").width(m).height(d),o(N).width(m).height(d).each(function(){y++,o(this).attr("id",L.options.AscensorName+"Floor"+y).addClass(L.options.AscensorName+"Floor")}),("x"===L.options.Direction||"chocolate"===L.options.Direction)&&o(N).css("position","absolute"),o(n).resize(function(){t()}).load(function(){t()}).resize(),n.DeviceOrientationEvent&&o(n).bind("orientationchange",function(){t()}),L.options.KeyNavigation){var w=/Firefox/i.test(navigator.userAgent);w?o(document).keypress(e):o(document).keydown(e)}o(k).on("ascensorLeft",function(){f()}),o(k).on("ascensorRight",function(){l()}),o(k).on("ascensorUp",function(){p()}),o(k).on("ascensorDown",function(){a()}),o(k).on("ascensorNext",function(){h()}),o(k).on("ascensorPrev",function(){u()}),o("."+L.options.AscensorName+"LinkPrev").on("click",function(){u()}),o("."+L.options.AscensorName+"LinkNext").on("click",function(){h()}),o("."+L.options.AscensorName+"LinkLeft").on("click",function(){l()}),o("."+L.options.AscensorName+"LinkRight").on("click",function(){f()}),o("."+L.options.AscensorName+"LinkUp").on("click",function(){a()}),o("."+L.options.AscensorName+"LinkDown").on("click",function(){p()}),o("."+L.options.AscensorName+"Link").on("click",function(){var n=parseInt(o(this).attr("class").split(" ")[1].split(L.options.AscensorName+"Link")[1],10);s(n,L.options.Time)}),s(v,1,!0),o(n).on("hashchange",function(){i()}),i(!0)},o.fn[t]=function(n){return this.each(function(){o.data(this,"plugin_"+t)||o.data(this,"plugin_"+t,new i(this,n))})}})(jQuery,window);